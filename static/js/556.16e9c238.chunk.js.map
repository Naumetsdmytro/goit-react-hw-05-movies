{"version":3,"file":"static/js/556.16e9c238.chunk.js","mappings":"mLACA,EAAyB,uB,SCGZA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,MAAM,OACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,OACfC,YAAa,EACbC,qBAAsB,KAI7B,C,+ICpBD,EAA+B,8BAA/B,EAA+E,iC,SCGlEC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAajB,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAA6Cc,MAC7C,uBAAIC,MAFGC,EADE,KAQlB,EC8BD,EAvCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAiB,mCAAG,2FACxBR,GAAW,GADa,mBAGHS,EAAAA,EAAAA,IAAaN,EAASG,GAHnB,OAGhBI,EAHgB,OAItBZ,EAAWY,GAJW,gDAMtBR,EAAS,KAAMS,SANO,yBAQtBX,GAAW,GARW,4EAAH,qDAavB,OAFAQ,IAEO,WACLF,EAAgBM,OACjB,CACF,GAAE,CAACT,KAEF,gCACGX,EAAQqB,OAAS,GAChB,SAACtB,EAAD,CAAaC,QAASA,KAEtB,oEAEDO,IAAW,SAACrB,EAAA,EAAD,IACXuB,IAAS,wBAAKA,MAGpB,C,8LCxCDa,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMV,GAAN,yFAGrBQ,EAAAA,EAAAA,IAAA,sCAAyCC,GAAW,CAC5DE,OAAQX,EAAgBW,SAJK,uBAErBC,EAFqB,EAE7BR,KAAQQ,QAFqB,kBAMxBA,GANwB,2CAAH,sDASjBC,EAAiB,mCAAG,WAAOvB,EAAIU,GAAX,yFACRQ,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,GAAW,CAClEE,OAAQX,EAAgBW,SAFK,uBACvBP,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,wDAOjBU,EAAgB,mCAAG,WAAOC,EAAOf,GAAd,yFAGpBQ,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDM,GAAS,CACrEJ,OAAQX,EAAgBW,SAJI,uBAEpBC,EAFoB,EAE5BR,KAAQQ,QAFoB,kBAMvBA,GANuB,2CAAH,wDAShBI,EAAS,mCAAG,WAAO1B,EAAIU,GAAX,yFAGbQ,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,GAAW,CAC7DE,OAAQX,EAAgBW,SAJH,uBAEbM,EAFa,EAErBb,KAAQa,KAFa,kBAMhBA,GANgB,2CAAH,wDASTd,EAAY,mCAAG,WAAOb,EAAIU,GAAX,yFAGhBQ,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,GAAW,CAC7DE,OAAQX,EAAgBW,SAJA,uBAEhBC,EAFgB,EAExBR,KAAQQ,QAFgB,kBAMnBA,GANmB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsListItem\":\"Reviews_reviewsListItem__FIdwO\"};","import PropTypes from 'prop-types';\n\nimport styles from './Reviews.module.css';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id} className={styles.reviewsListItem}>\n          <h3 className={styles.reviewsTitle}>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Loader } from 'components/Loader';\nimport { fetchReviews } from 'components/services/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from './ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchUsersReviews = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchReviews(movieId, abortController);\n        setReviews(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsersReviews();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      {loading && <Loader />}\n      {error && <h3>{error}</h3>}\n    </>\n  );\n};\n\nexport default Reviews;\n","//1d32ff7478bc0343f9347491f3fce9be (key)\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1d32ff7478bc0343f9347491f3fce9be';\n\nexport const fetchPopularFilms = async abortController => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchMoviedetails = async (id, abortController) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return data;\n};\n\nexport const fetchMovieByName = async (query, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchCast = async (id, abortController) => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return cast;\n};\n\nexport const fetchReviews = async (id, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n"],"names":["Loader","className","styles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ReviewsList","reviews","map","author","content","id","useState","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","abortController","AbortController","fetchUsersReviews","fetchReviews","data","message","abort","length","axios","API_KEY","fetchPopularFilms","signal","results","fetchMoviedetails","fetchMovieByName","query","fetchCast","cast"],"sourceRoot":""}