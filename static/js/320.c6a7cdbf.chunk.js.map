{"version":3,"file":"static/js/320.c6a7cdbf.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","components/pages/MovieDetails.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Container_main__L+Jjj\"};","import styles from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <main className={styles.main}>{children}</main>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardButton\":\"MovieCard_cardButton__n2nUC\",\"container\":\"MovieCard_container__4KN1P\",\"informationContainer\":\"MovieCard_informationContainer__FilzC\",\"movieTitle\":\"MovieCard_movieTitle__61Rqx\",\"movieText\":\"MovieCard_movieText__za8-j\",\"movieImg\":\"MovieCard_movieImg__YAoiQ\",\"aditionInformContainer\":\"MovieCard_aditionInformContainer__bkUG-\",\"informLink\":\"MovieCard_informLink__Ma0fL\"};","import { NavLink, Link, useLocation, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport plug from '../../images/plug.jpg';\nimport styles from './MovieCard.module.css';\n\nexport const MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const date = new Date(movie.release_date);\n\n  const { img, genres, release, voteAverage } = {\n    img: movie.poster_path,\n    genres: movie.genres.map(({ name }) => name).join(', '),\n    release: date.getUTCFullYear(movie.release_date),\n    voteAverage: movie.vote_average.toFixed(1) * 10,\n  };\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <button type=\"button\" className={styles.cardButton}>\n          Go back\n        </button>\n      </Link>\n      <div className={styles.container}>\n        {img ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500` + img}\n            alt={movie.title}\n            width={270}\n            height={350}\n            className={styles.movieImg}\n          />\n        ) : (\n          <img\n            src={plug}\n            width={280}\n            height={360}\n            alt=\"plug\"\n            className={styles.movieImg}\n          />\n        )}\n        <div className={styles.informationContainer}>\n          <h2 className={styles.movieTitle}>\n            {movie.title} ({release})\n          </h2>\n          <p className={styles.movieText}>User Score: {voteAverage}%</p>\n          <h3 className={styles.movieTitle}>Overview</h3>\n          <p className={styles.movieText}>{movie.overview}</p>\n          <h3 className={styles.movieTitle}>Genres</h3>\n          <p className={styles.movieText}>{genres}</p>\n        </div>\n      </div>\n      <div className={styles.aditionInformContainer}>\n        <h3 className={styles.movieTitle}>Aditional information</h3>\n        <ul>\n          <li className={styles.informLink}>\n            <NavLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { fetchMoviedetails } from 'components/services/API';\nimport { MovieCard } from 'components/MovieCard';\nimport { Loader } from 'components/Loader';\nimport { Container } from 'components/Container';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchMovie = async () => {\n      setLoading(true);\n      try {\n        const movieData = await fetchMoviedetails(movieId, abortController);\n        setMovie(movieData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      {movie && <MovieCard movie={movie} />}\n      {loading && <Loader />}\n      {error && <h3>{error}</h3>}\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","//1d32ff7478bc0343f9347491f3fce9be (key)\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1d32ff7478bc0343f9347491f3fce9be';\n\nexport const fetchPopularFilms = async abortController => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchMoviedetails = async (id, abortController) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return data;\n};\n\nexport const fetchMovieByName = async (query, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchCast = async (id, abortController) => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return cast;\n};\n\nexport const fetchReviews = async (id, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n"],"names":["Container","children","className","styles","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","MovieCard","movie","location","useLocation","backLinkHref","state","from","date","Date","release_date","img","poster_path","genres","map","name","join","release","getUTCFullYear","voteAverage","vote_average","toFixed","to","type","src","alt","title","plug","overview","Suspense","fallback","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","useEffect","abortController","AbortController","fetchMovie","fetchMoviedetails","movieData","message","abort","axios","API_KEY","fetchPopularFilms","signal","results","data","id","fetchMovieByName","query","fetchCast","cast","fetchReviews"],"sourceRoot":""}