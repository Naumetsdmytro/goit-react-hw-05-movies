{"version":3,"file":"static/js/348.64e81088.chunk.js","mappings":"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","sources":["components/Cast/CastList.jsx","../node_modules/nanoid/index.browser.js","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/services/API.js"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nimport plug from '../../images/plug.jpg';\n\nexport const CastList = ({ cast }) => {\n  const changedCast = cast.map(({ name, profile_path, character, id }) => ({\n    name,\n    img: profile_path,\n    character,\n    id,\n  }));\n  return (\n    <ul>\n      {changedCast.map(({ name, img, character }) => (\n        <li key={nanoid()}>\n          {img ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500` + img}\n              width={115}\n              height={133}\n              alt={name}\n            />\n          ) : (\n            <img src={plug} width={110} height={133} alt=\"plug\" />\n          )}\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCast } from 'components/services/API';\nimport { Loader } from 'components/Loader';\nimport { CastList } from './CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      setLoading(true);\n      try {\n        const credits = await fetchCast(movieId);\n        console.log(credits);\n        setCast(credits);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 && !loading && <CastList cast={cast} />}\n      {loading && <Loader />}\n      {error && <h3>{error}</h3>}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","//1d32ff7478bc0343f9347491f3fce9be (key)\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1d32ff7478bc0343f9347491f3fce9be';\n\nexport const fetchPopularFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const fetchMoviedetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return results;\n};\n\nexport const fetchCast = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return cast;\n};\n\nexport const fetchReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return results;\n};\n"],"names":["CastList","changedCast","cast","map","name","img","profile_path","character","id","src","width","height","alt","plug","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","useState","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCredits","fetchCast","credits","console","log","message","length","Loader","className","styles","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","axios","API_KEY","fetchPopularFilms","results","data","fetchMoviedetails","fetchMovieByName","query","fetchReviews"],"sourceRoot":""}