{"version":3,"file":"static/js/504.c444f7c8.chunk.js","mappings":"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","sources":["components/List/List.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/SearchForm/SearchForm.jsx","components/pages/Movies.jsx","components/services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const HomeList = ({ films, location }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport const MoviesList = ({ films, location }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","export const SearchForm = ({ searchQuery, filmName }) => {\n  return (\n    <form onSubmit={searchQuery}>\n      <input type=\"text\" name=\"name\"></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\n\nimport { MoviesList } from 'components/List';\nimport { fetchMovieByName } from 'components/services/API';\nimport { SearchForm } from 'components/SearchForm';\nimport { Loader } from 'components/Loader';\n\nconst Movies = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (filmName === '') {\n      // Notiflix.Notify.failure('Please, enter the name, which you want!');\n      return;\n    }\n\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const films = await fetchMovieByName(filmName);\n        if (films.length === 0) {\n          Notiflix.Notify.info('Please, enter a valid name!');\n          return;\n        }\n        setMovie(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [filmName]);\n\n  const searchQuery = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const query =\n      form.elements.name.value !== ''\n        ? { query: form.elements.name.value }\n        : {};\n    setSearchParams(query);\n    form.reset();\n  };\n\n  return (\n    <main>\n      <SearchForm searchQuery={searchQuery} filmName={filmName} />\n      {loading && <Loader />}\n      {error && <h3>{error}</h3>}\n      {movies.length > 0 && !loading && (\n        <MoviesList films={movies} location={location} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","//1d32ff7478bc0343f9347491f3fce9be (key)\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1d32ff7478bc0343f9347491f3fce9be';\n\nexport const fetchPopularFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const fetchMoviedetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return results;\n};\n\nexport const fetchCast = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return cast;\n};\n\nexport const fetchReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return results;\n};\n"],"names":["HomeList","films","location","map","id","title","to","state","from","MoviesList","Loader","className","styles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","SearchForm","searchQuery","filmName","onSubmit","type","name","useState","movies","setMovie","loading","setLoading","error","setError","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","fetchMovieByName","length","Notiflix","message","evt","preventDefault","form","currentTarget","query","elements","value","reset","axios","API_KEY","fetchPopularFilms","results","data","fetchMoviedetails","fetchCast","cast","fetchReviews"],"sourceRoot":""}