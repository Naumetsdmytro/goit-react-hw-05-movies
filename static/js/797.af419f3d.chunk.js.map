{"version":3,"file":"static/js/797.af419f3d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/components/Lists/Lists.module.css?a692","components/Lists/Lists.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/pages/Movies.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Container_main__L+Jjj\"};","import styles from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <main className={styles.main}>{children}</main>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Lists_listItem__tif4p\"};","import PropTypes, { object } from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport styles from './Lists.module.css';\n\nexport const HomeList = ({ films, location }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <li key={id} className={styles.listItem}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nHomeList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: object,\n};\n\nexport const MoviesList = ({ films, location }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <li key={id} className={styles.listItem}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\"};","import PropTypes from 'prop-types';\n\nimport styles from './SearchForm.module.css';\n\nexport const SearchForm = ({ searchQuery }) => {\n  return (\n    <form onSubmit={searchQuery} className={styles.searchForm}>\n      <input type=\"text\" name=\"name\" className={styles.searchFormInput}></input>\n      <button type=\"submit\" className={styles.searchFormButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  searchQuery: PropTypes.func.isRequired,\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\n\nimport { MoviesList } from 'components/Lists';\nimport { fetchMovieByName } from 'components/services/API';\nimport { SearchForm } from 'components/SearchForm';\nimport { Loader } from 'components/Loader';\nimport { Container } from 'components/Container';\n\nconst Movies = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (filmName === '') {\n      return;\n    }\n    const abortController = new AbortController();\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const films = await fetchMovieByName(filmName, abortController);\n        if (films.length === 0) {\n          Notiflix.Notify.info('Please, enter a valid name!');\n          return;\n        }\n        setMovie(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [filmName]);\n\n  const searchQuery = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const query =\n      form.elements.name.value !== ''\n        ? { query: form.elements.name.value }\n        : {};\n    setSearchParams(query);\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm searchQuery={searchQuery} />\n      {loading && <Loader />}\n      {error && <h3>{error}</h3>}\n      {movies.length > 0 && !loading && (\n        <MoviesList films={movies} location={location} />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","//1d32ff7478bc0343f9347491f3fce9be (key)\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1d32ff7478bc0343f9347491f3fce9be';\n\nexport const fetchPopularFilms = async abortController => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchMoviedetails = async (id, abortController) => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return data;\n};\n\nexport const fetchMovieByName = async (query, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n\nexport const fetchCast = async (id, abortController) => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return cast;\n};\n\nexport const fetchReviews = async (id, abortController) => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`, {\n    signal: abortController.signal,\n  });\n  return results;\n};\n"],"names":["Container","children","className","styles","HomeList","films","location","map","id","title","to","state","from","MoviesList","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","SearchForm","searchQuery","onSubmit","type","name","useState","movies","setMovie","loading","setLoading","error","setError","useLocation","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","abortController","AbortController","fetchMovies","fetchMovieByName","length","Notiflix","message","abort","evt","preventDefault","form","currentTarget","query","elements","value","reset","axios","API_KEY","fetchPopularFilms","signal","results","data","fetchMoviedetails","fetchCast","cast","fetchReviews"],"sourceRoot":""}